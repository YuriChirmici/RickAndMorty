{"version":3,"sources":["components/Character/Character.module.css","components/Header/Header.module.css","components/Character/Character.jsx","api/api.js","redux/characters-reducer.js","redux/characters-selectors.js","components/Character/CharacterContainer.jsx","components/Header/Header.jsx","App.js","reportWebVitals.js","redux/redux-store.js","index.js"],"names":["module","exports","Character","props","currentCharacter","characters","currentCharacterId","getCharacter","count","newId","Math","floor","random","requestNewCharacter","useEffect","requestCharactersCount","className","styles","isFetching","loading","characters__inner","character","image","src","alt","info","name","status","green","red","gray","getStatusColor","gender","blue","pink","getGenderColor","species","origin","location","button","onClick","instance","axios","baseURL","charactersAPI","characterId","get","then","response","data","SET_CHARACTER","SET_CURRENT_CHARACTER","SET_CHARACTERS_COUNT","TOGGLE_IS_FETCHING","initialState","setCharacter","type","setCurrentCharacter","charactersReducer","state","action","id","getCurrentCharacter","getCharacters","getCharactersCount","getIsFetching","mapDispatchToProps","dispatch","a","result","str","toUpperCase","substring","connect","Header","header","App","CharacterContainer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e8518ec6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"characters\":\"Character_characters__21Zes\",\"characters__inner\":\"Character_characters__inner__P3N02\",\"loading\":\"Character_loading__LkXdW\",\"character\":\"Character_character__2g5cE\",\"image\":\"Character_image__3Vf7p\",\"info\":\"Character_info__1ijum\",\"name\":\"Character_name__2crId\",\"status\":\"Character_status__3DLYa\",\"green\":\"Character_green__3e2_7\",\"red\":\"Character_red__1N9ye\",\"gray\":\"Character_gray__2rr3m\",\"blue\":\"Character_blue__2oAp9\",\"pink\":\"Character_pink__2RPcm\",\"origin\":\"Character_origin__D3efZ\",\"button\":\"Character_button__2HowB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__17qM7\"};","import styles from \"./Character.module.css\";\r\nimport {useEffect} from \"react\";\r\n\r\nconst Character = (props) => {\r\n\tconst currentCharacter = props.characters[props.currentCharacterId];\r\n\tconst getCharacter = (count) => {\r\n\t\tlet newId = Math.floor(Math.random() * (count - 1)) + 1;\r\n\t\tprops.requestNewCharacter(newId, props.characters)\r\n\t}\r\n\r\n\tuseEffect( () => {\r\n\t\tif(props.count === 0) {\r\n\t\t\tprops.requestCharactersCount();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tgetCharacter(props.count);\r\n\t\t}\r\n\t}, [props.count])\r\n\r\n\tconst getStatusColor = (status) => {\r\n\t\tswitch(status) {\r\n\t\t\tcase \"Alive\": return styles.green;\r\n\t\t\tcase \"Dead\": return styles.red;\r\n\t\t\tdefault : return styles.gray;\r\n\t\t}\r\n\t}\r\n\r\n\tconst getGenderColor = (status) => {\r\n\t\tswitch(status) {\r\n\t\t\tcase \"Male\": return styles.blue;\r\n\t\t\tcase \"Female\": return styles.pink;\r\n\t\t\tdefault : return styles.gray;\r\n\t\t}\r\n\t}\r\n\treturn (\r\n\t\t<div className={styles.characters}>\r\n\t\t\t{props.isFetching ? \r\n\t\t\t\t<div className={styles.loading}>...loading</div>\r\n\t\t\t:\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<div className={styles.characters__inner}>\r\n\t\t\t\t\t<div className={styles.character}>\r\n\t\t\t\t\t\t<div className={styles.image}>\r\n\t\t\t\t\t\t\t<img src={currentCharacter.image} alt=\"\" />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className={styles.info}>\r\n\t\t\t\t\t\t\t<div className={styles.name}>\r\n\t\t\t\t\t\t\t\t{currentCharacter.name} \r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className={styles.status + \" \" + \r\n\t\t\t\t\t\t\t\tgetStatusColor(currentCharacter.status)}>\r\n\t\t\t\t\t\t\t\t{currentCharacter.status}\r\n\t\t\t\t\t\t\t\t<pre> - </pre>\r\n\t\t\t\t\t\t\t\t<span className={styles.gender + \" \" +\r\n\t\t\t\t\t\t\t\t\tgetGenderColor(currentCharacter.gender)}> \r\n\t\t\t\t\t\t\t\t\t{currentCharacter.species} \r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className={styles.origin}>\r\n\t\t\t\t\t\t\t\t<div className={styles.gray}>\r\n\t\t\t\t\t\t\t\t\tFirst seen in:\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t{currentCharacter.origin}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className={styles.location}>\r\n\t\t\t\t\t\t\t\t<div className={styles.gray}>\r\n\t\t\t\t\t\t\t\t\tLast known location:\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t{currentCharacter.location}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={styles.button}>\r\n\t\t\t\t\t\t<button onClick={() => getCharacter(props.count)}>\r\n\t\t\t\t\t\t\tGet random character\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Character;","import * as axios from \"axios\";\r\n\r\nlet instance = axios.create({\r\n\tbaseURL: \"https://rickandmortyapi.com/api/\",\r\n})\r\n\r\nexport const charactersAPI = {\r\n\trequestCharacter(characterId) {\r\n\t\treturn instance.get(\"character/\" + characterId)\r\n\t\t\t.then(response => response.data);\r\n\t},\r\n\trequestCharactersCount() {\r\n\t\treturn instance.get(\"character\")\r\n\t\t\t.then(response => response.data.info.count);\r\n\t}\r\n}","import {charactersAPI} from \"../api/api\";\r\n\r\nconst SET_CHARACTER = \"characters/SET_CHARACTER\";\r\nconst SET_CURRENT_CHARACTER = \"characters/SET_CURRENT_CHARACTER\";\r\nconst SET_CHARACTERS_COUNT = \"characters/SET_CHARACTERS_COUNT\";\r\nconst TOGGLE_IS_FETCHING = \"characters/TOGGLE_IS_FETCHING\";\r\n\r\nlet initialState = {\r\n\tcount: 0,\r\n\tcurrentCharacterId: 0,\r\n\tcharacters: {},\r\n\tisFetching: true,\r\n}\r\n\r\nconst charactersReducer = (state = initialState, action) => {\r\n\tswitch(action.type) {\r\n\t\tcase SET_CHARACTER: \r\n\t\t\treturn {\r\n\t\t\t\t...state,  \r\n\t\t\t\tcharacters: {\r\n\t\t\t\t\t...state.characters, \r\n\t\t\t\t\t[action.character.id]: action.character\r\n\t\t\t\t},\r\n\t\t\t\tcurrentCharacterId: action.character.id,\r\n\t\t\t\tisFetching: false,\r\n\t\t\t};\r\n\t\tcase SET_CURRENT_CHARACTER:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcurrentCharacterId: action.characterId,\r\n\t\t\t}\r\n\t\tcase SET_CHARACTERS_COUNT: \r\n\t\t\treturn {...state, count: action.count};\r\n\t\tcase TOGGLE_IS_FETCHING: \r\n\t\t\treturn {...state, isFetching: action.isFetching};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nconst setCharacter = (character) => (\r\n\t{type: SET_CHARACTER, character}\r\n);\r\n\r\nconst setCurrentCharacter = (characterId) => (\r\n\t{type: SET_CURRENT_CHARACTER, characterId}\r\n);\r\n\r\nconst setCharactersCount = (count) => (\r\n\t{type: SET_CHARACTERS_COUNT, count}\r\n);\r\n\r\nconst toggleIsFetching = (isFetching) => (\r\n\t{type: TOGGLE_IS_FETCHING, isFetching}\r\n);\r\n\r\nconst capitalize = (str) => str[0].toUpperCase() + str.substring(1);\r\n\r\nexport const requestNewCharacter = (characterId, characters) => async (dispatch) => {\r\n\tif(characterId in characters) {\r\n\t\tdispatch(setCurrentCharacter(characterId))\r\n\t} else {\r\n\t\tdispatch(toggleIsFetching(true));\r\n\t\tlet result = await charactersAPI.requestCharacter(characterId);\r\n\t\tlet character = {\r\n\t\t\tid: result.id,\r\n\t\t\tname: result.name,\r\n\t\t\tstatus: capitalize(result.status),\r\n\t\t\tspecies: result.species,\r\n\t\t\tgender: result.gender,\r\n\t\t\torigin: result.origin.name,\r\n\t\t\tlocation: result.location.name,\r\n\t\t\timage: result.image,\r\n\t\t};\r\n\r\n\t\tdispatch(setCharacter(character));\r\n\t}\r\n}\r\n\r\nexport const requestCharactersCount = () => async (dispatch) => {\r\n\tlet result = await charactersAPI.requestCharactersCount();\r\n\tdispatch(setCharactersCount(result));\r\n}\r\n\r\nexport default charactersReducer;","export const getCurrentCharacter = (state) => state.characters.currentCharacterId;\r\n\r\nexport const getCharacters = (state) => state.characters.characters;\r\n\r\nexport const getCharactersCount = (state) => state.characters.count;\r\n\r\nexport const getIsFetching = (state) => state.characters.isFetching;","import Character from \"./Character\";\r\nimport {connect} from \"react-redux\";\r\nimport {requestNewCharacter, requestCharactersCount} from \"../../redux/characters-reducer\";\r\nimport {getCurrentCharacter, getCharacters, getCharactersCount, getIsFetching} from \"../../redux/characters-selectors\";\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tcurrentCharacterId: getCurrentCharacter(state),\r\n\t\tcharacters: getCharacters(state),\r\n\t\tcount: getCharactersCount(state),\r\n\t\tisFetching: getIsFetching(state),\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n\trequestNewCharacter,\r\n\trequestCharactersCount\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Character)","import styles from \"./Header.module.css\";\r\n\r\nconst Header = (props) => {\r\n\treturn (\r\n\t\t<header className={styles.header}>\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<h1>Rick and Morty</h1>\r\n\t\t\t</div>\r\n\t\t</header>\r\n\t)\r\n}\r\n\r\nexport default Header;","import './App.css';\nimport CharacterContainer from \"./components/Character/CharacterContainer\";\nimport Header from \"./components/Header/Header\";\n\nfunction App() {\n\treturn (\n\t\t<div className=\"app\">\n\t\t\t<Header />\n\t\t\t<CharacterContainer />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {combineReducers, createStore, applyMiddleware} from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport charactersReducer from \"./characters-reducer\";\r\n\r\nconst reducers = combineReducers({\r\n\tcharacters: charactersReducer,\r\n});\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from \"react-router-dom\"\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/redux-store\";\n\nReactDOM.render(\n\t<BrowserRouter>\n\t\t<Provider store={store}>\n\t\t\t<App />\n\t\t</Provider>\n\t</BrowserRouter>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}